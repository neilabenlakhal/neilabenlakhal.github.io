---
layout: post
title:  "Chapter 3 -Section 1 added !"
date:   2021-10-13 10:40:12 +0300
categories: Course update
---

The Web materials and resources of Chapter 3 are listed here.

# [Chapter 3, Web Services-Core functionality and standards](https://github.com/neilabenlakhal/neilabenlakhal.github.io/tree/master/2020-2021Lecture/SOC/Chapter_3)

# Section 1 Web services-core standards 

## Chapter synopsis

Chapter 3 will go through the WS-* standards, technologies and APIs that are commonly used to implement a service-oriented application. Bottom-up and top-down service implementations approaches are explored. This chapter introduces also two service integration and composition techniques, namely service orchestration and choreography for composing individual services so as to achieve useful business processes. By the end of this chapter, students will come to know about service implementation,testing, discovery, publication and invocation platforms. Basic concepts of orchestration and choreography, with orchestration and choreography readily available orchestration platforms and workflow engines like BPEL are also explained.

## Before lecture

üìö **ToRead**

Objective : prepare web services(SOAP) implementation platforms

1. From [XML Visual quick start guide, 2nd edition](https://github.com/neilabenlakhal/neilabenlakhal.github.io/blob/master/2020-2021Lecture/SOC/Chapter_2/ToRead/XML%20Visual%20QuickStart%20Guide%202nd%20Edition.pdf)
   * **Part 17.** Ajax, RSS, SOAP, and More
   
  
2. From [Web services : principles and technology](https://github.com/neilabenlakhal/neilabenlakhal.github.io/blob/master/2020-2021Lecture/SOC/Chapter_2/ToRead/Web%20services%20%20principles%20and%20technology.pdf)
   * **Chap 4.** SOAP

3. From [Building Web Services with Java: Making Sense of XML, SOAP, WSDL, and UDDI 2nd Edition](https://github.com/neilabenlakhal/neilabenlakhal.github.io/blob/master/2020-2021Lecture/SOC/Chapter_2/ToRead/Building%20Web%20Services%20with%20Java%20Making%20Sense%20of%20XML,%20SOAP,%20WSDL.pdf)
    * **Chap .** SOAP

üìù **ToDo**

To go through the lifecycle of a web service, we will need several tools that you should install on your machine. 

*** Web service implementation ***

In order to implement web services either in Bottom-up or top-down web services, you will need: 

* [AMPPS](https://ampps.com/downloads) is a MAMP, WAMP and LAMP software stack from Softaculous enabling Apache, Mysql, MongoDB, PHP, Perl, and Python. This includes everything you need for website development. Start developing your website from open source web applications or just start writing code yourself.
  

* PhP comes with a top-down enabling web services implementation API. But for implementing web services along the bottom-up approach, we will be using [NUSOAP](https://sourceforge.net/projects/nusoap/) : NuSOAP is a rewrite of SOAPx4, provided by NuSphere and Dietrich Ayala. It is a set of PHP classes - no PHP extensions required - that allow developers to create and consume web services based on SOAP 1.1, WSDL 1.1 and HTTP 1.0/1.1. Please download NUSOAP, unzip it and add it to your `www` folder in your installed AMPPS platform.

*** Web service testing ***

In order to test web services we will be using :

* [SOAPUI the open source version](https://www.soapui.org/downloads/soapui/):  an API (SOAP/REST) testing tool.

  
## After lecture : 

üíª **ToCode** 

Clone the following client on your machine : https://github.com/neilabenlakhal/webservice1.git

- Install required softwares (SOAPUI, AMPPS, NUSOAP).

- Test the code on your machine and make sure it is working properly.

- Run `SOAPUI` test of several SOAP web services (see additional resources section).

- Choose one SOAP web service and test it with `SOAPUI` then,  write a client to call it (write a PHP client using NUSOAP class).

- Push your Web service client code and  with print screens of your SOAPUI tests to your `GIT` repository. 

Send the following on Microsoft Teams :

- Link of your Web service client (git repository)

- Print screens of SOAPUI tests (successful test + faulty test)

## Preferred text editor:
  
It is highly recommended to use :

* üîó[Visual studio code](https://code.visualstudio.com/docs/setup/setup-overview)  with [RedHat extension](https://developers.redhat.com/blog/2018/12/04/xml-language-server-vscode-extension/). This extension will help you with XML validation.

## Additional resources:

Several web services web sites :

- üîó [API directory](https://www.programmableweb.com/)
- üîó [A directory of free web services](https://www.free-web-services.com/)
- üîó [Collection of public APIs](https://explore.postman.com/templates)
- üîó [Financial web services](http://www.xignite.com/)
- üîó [SMS, voice, phone and address verification APIs](http://www.cdyne.com)
- üîó [Ebay shopping API](https://developer.ebay.com/devzone/shopping/docs/Concepts/ShoppingAPIGuide.html)
- üîó [List of weather related and financial web services](http://sofa.uqam.ca/soda/webservices.php)


## Chapter Videos :

[Youtube video lecture Section 1: Chapter 2 review](https://youtu.be/6cwVPO2pYkc)

<iframe width="560" height="315" src="https://www.youtube.com/embed/6cwVPO2pYkc" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


[Youtube video lecture Section 2: service properties (part 1)](https://youtu.be/4UEHxG1HHvo)

<iframe width="560" height="315" src="https://www.youtube.com/embed/4UEHxG1HHvo" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

[Youtube video lecture Section 2: service properties (part 2)](https://youtu.be/0KyjCYbVdD4)

<iframe width="560" height="315" src="https://www.youtube.com/embed/0KyjCYbVdD4" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

[Youtube video lecture Section 3: Web service Demo (part 1)](https://youtu.be/l2bBYjHcAtM)

<iframe width="560" height="315" src="https://www.youtube.com/embed/l2bBYjHcAtM" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

[Youtube video lecture Section 3: Web service Demo (part 2)](https://youtu.be/GteQ3IEmtWE)

<iframe width="560" height="315" src="https://www.youtube.com/embed/GteQ3IEmtWE" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


[Youtube video lecture Section 4: XML review- Namespaces - SOAP protocol](https://youtu.be/JUpKPmB2Wew)

  <iframe width="560" height="315" src="https://www.youtube.com/embed/JUpKPmB2Wew" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

[Youtube video lecture Section 5: Web service NUSOAP client (part 1)](https://youtu.be/WWZ6qfjE6Sk)

<iframe width="560" height="315" src="https://www.youtube.com/embed/WWZ6qfjE6Sk" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

  
[Youtube video lecture Section 6: Web service NUSOAP client (part 2)](https://youtu.be/jQUvkrsYZd8)

<iframe width="560" height="315" src="https://www.youtube.com/embed/jQUvkrsYZd8" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

